#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"(?<!/)[:graph:]+(?=/)")
names(data228[[5]]) <- "全宗名編號"
data228[[5]]
# data228[c("全宗名編號","年")]
#`全宗名編號` <-
#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"(?<!/)[:graph:]+(?=/)")
names(data228[[5]]) <- "全宗名編號"
data228[[5]]
# data228[c("全宗名編號","年")]
#`全宗名編號` <-
#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"(?<!\\/)[:graph:]+(?=\\/)")
names(data228[[5]]) <- "全宗名編號"
data228[[5]]
# data228[c("全宗名編號","年")]
#`全宗名編號` <-
#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]+(?=/)")
names(data228[[5]]) <- "全宗名編號"
data228[[5]]
# data228[c("全宗名編號","年")]
#`全宗名編號` <-
#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
names(data228[[5]]) <- "全宗名編號"
data228[[5]]
# data228[c("全宗名編號","年")]
View(data228)
#`全宗名編號` <-
#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
names(data228[[5]]) <- c("全宗名編號")
data228[[5]]
# data228[c("全宗名編號","年")]
View(data228)
View(data228)
View(data228)
class(data228[[5]])
#`全宗名編號` <-
#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
facor(data228[[5]],levels=data228[[5]])
#`全宗名編號` <-
#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
factor(data228[[5]],levels=data228[[5]])
names(data228[[5]]) <- c("全宗名編號")
data228[[5]]
# data228[c("全宗名編號","年")]
#`全宗名編號` <-
#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
factor(data228[[5]])
names(data228[[5]]) <- c("全宗名編號")
data228[[5]]
# data228[c("全宗名編號","年")]
View(data228)
#`全宗名編號` <-
#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
data228[[5]] <- factor(data228[[5]])
names(data228[[5]]) <- c("全宗名編號")
data228[[5]]
# data228[c("全宗名編號","年")]
View(data228)
levels(data228[[5]])
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]+(?=/)")
data228[[5]] <- factor(data228[[5]])
names(data228[[5]]) <- c("全宗名編號")
data228[[5]]
#data228[[6]] <- str_extract(data228[[1]],"^[:graph:]{11}")
# data228[c("全宗名編號","年")]
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11,12}")
data228[[5]] <- factor(data228[[5]])
names(data228[[5]]) <- c("全宗名編號")
data228[[5]]
#data228[[6]] <- str_extract(data228[[1]],"^[:graph:]{11}")
# data228[c("全宗名編號","年")]
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11,12}")
data228[[5]] <- factor(data228[[5]])
names(data228[[5]]) <- c("全宗名編號")
data228[[5]]
#data228[[6]] <- str_extract(data228[[1]],"^[:graph:]{11}")
levels(data228[[5]] )
# data228[c("全宗名編號","年")]
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11,12}")
data228[[5]] <- factor(data228[[5]])
names(data228[[5]]) <- c("全宗名編號")
data228[[5]]
#data228[[6]] <- str_extract(data228[[1]],"^[:graph:]{11}")
levels(data228[[5]])
# data228[c("全宗名編號","年")]
#data228[[6]] <- str_extract(data228[[1]],"^[:graph:]{11}")
levels(data228[[5]])
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
data228[[5]] <- factor(data228[[5]])
names(data228[[5]]) <- c("全宗名編號")
data228[[5]]
#data228[[6]] <- str_extract(data228[[1]],"^[:graph:]{11}")
# data228[c("全宗名編號","年")]
View(data228)
data228[[6]] <- str_extract(data228[[1]],"(?<=data228[[5]]/00)[:graph:]{2}")
data228[[6]] <- str_extract(data228[[1]],"(?<=data228[[5]]/00)[:graph:]{2}")
data228[[6]] <- factor(data228[[6]])
names(data228[[6]]) <- c("年")
data228[[6]]
data228[[6]] <- str_extract(data228[[1]],"(?<=[:graph:]{14})[:graph:]{2}")
data228[[6]] <- factor(data228[[6]])
names(data228[[6]]) <- c("年")
data228[[6]]
data228[c("全宗名編號","年")]
`全宗名編號` <- data228[[5]]
View(data228)
`全宗名編號` -> data228[[5]]
View(data228)
names(data228[5]) <- c("全宗名編號")
View(data228)
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
data228[[5]] <- factor(data228[[5]])
names(data228[5]) <- c("全宗名編號")
data228[[6]] <- str_extract(data228[[1]],"(?<=[:graph:]{14})[:graph:]{2}")
data228[[6]] <- as.numeric(data228[[6]])
names(data228[[6]]) <- c("年")
data228[c("全宗名編號","年")]
View(data228)
names(V5) <- c("全宗名編號")
names(data228[[5]]) <- `全宗名編號`
View(data228)
names(data228[[5]]) <- c("全宗名編號")
data228 <- c(`全宗名編號` = data228[[5]])
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
data228[[5]] <- factor(data228[[5]])
data228[[6]] <- str_extract(data228[[1]],"(?<=[:graph:]{14})[:graph:]{2}")
data228[[6]] <- as.numeric(data228[[6]])
names(data228[[6]]) <- c("年")
data228[c("全宗名編號","年")]
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
data228[[5]] <- c(`全宗名編號`=data228[[5]])
View(data228)
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
data228[[5]] <- factor(data228[[5]])
data228[[5]] <- c(`全宗名編號`=data228[[5]])
View(data228)
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
data228[[5]] <- factor(data228[[5]])
View(data228)
data228[[6]] <- str_extract(data228[[1]],"(?<=[:graph:]{14})[:graph:]{2}")
View(data228)
data228 <- list(c(`全宗名編號`=data228[[5]],`年`=data228[[6]]))
data228[c("全宗名編號","年")]
View(data228)
data228[[5]] <- list(`全宗名編號`=data228[[5]])
data228[[5]] <- (`全宗名編號`=data228[[5]])
data228[[5]] <- `全宗名編號`
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
data228[[5]] <- factor(data228[[5]])
names(data228[[5]]) <- c("全宗名編號")
data228[[6]] <- str_extract(data228[[1]],"(?<=[:graph:]{14})[:graph:]{2}")
data228[[6]] <- as.numeric(data228[[6]])
names(data228[[6]]) <- c("年")
data228[c("全宗名編號","年")]
data228[c("全宗名編號","年")]
View(data228)
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
c("全宗名編號") -> names(data228[[5]])
c(`全宗名編號`) -> names(data228[[5]])
View(data228)
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
data228[[5]] <- factor(data228[[5]])
c(`全宗名編號`) -> names(data228[[5]])
c("全宗名編號") -> names(data228[[5]])
View(data228)
jsonlite::fromJSON("https://www.dropbox.com/s/7myzzdnoor21hye/courseStructure2.json?dl=1") -> courseStructure
source("https://www.dropbox.com/s/pc8qg2phs3ypcr8/midterm108_2.R?dl=1", encoding="UTF-8")
View(courseStructure)
pick1 <- data228$附註=="表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
data1 <- data228$檔號[pick1]
victims <- data228$個人名稱[data1]
victims
pick1
data1 <- data228$檔號[pick1]
data1
pick2 <- data228$檔號 == data1
pick2 <- data228$檔號 == factor(data1)
data1 <- factor(data1)
pick2 <- data228$檔號 == data1
data1
pick1 <- data228$附註=="表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
data1 <- data228$檔號[pick1]
data1 <- factor(data1)
pick2 <- data228$檔號 == "A803000000A/0036/340.2/5502.3/19/007"
victims <- data228$個人名稱[pick2]
victims
pick1 <- data228$附註=="表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
data1 <- data228$檔號[pick1]
data1 <- factor(data1)
pick2 <- data228$檔號 == "A803000000A/0036/340.2/5502.3/19/007"
victims <- data228$個人名稱[pick2]
victims <- as.character(as.factor(victims))
victims
document1 <- data228$檔號[victims]
document1
pick3 <- data228$個人名稱 == victims
pick3 <- data228$個人名稱 %in% victims
document1 <- data228$檔號[pick3]
document1
table(document1)
jsonlite::fromJSON("https://www.dropbox.com/s/7myzzdnoor21hye/courseStructure2.json?dl=1") -> courseStructure
source("https://www.dropbox.com/s/pc8qg2phs3ypcr8/midterm108_2.R?dl=1", encoding="UTF-8")
View(courseStructure)
knitr::opts_chunk$set(echo = TRUE)
demand <- # 創造一個物件叫demand
function(p){ # 定義這個物件為函數
q_d <- 10-5*p # 小心是5*p, 不能寫5p
}
# p=1.4的需求量
demand(1.4)
# p=1.2的需求量
demand(1.2)
# p=1.3的需求量
demand(1.3)
# p=1.4的需求量
demand(1.4)
demand_return <-
function(p){
q_d <- 10-5*p
return(q_d)
}
# 印在螢幕，但Global Environment並不會有q_d
demand_return(1.2)
dateInput <- lubridate::today()
locationInput <- "新北市"
askSilly_weather <- function(locationInput,dateInput){
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
(weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location
weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation
(weatherAtLocation$elementName=="MaxT") ->
pick_MaxT
(weatherAtLocation$elementName=="MinT") ->
pick_MinT
weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT
weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT
glue::glue("{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。")
}
askSilly_weather("臺中市",today())
askSilly_weather("臺中市")#,today())
askSilly_weather <- function(locationInput,dateInput){
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
(weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location
weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation
(weatherAtLocation$elementName=="MaxT") ->
pick_MaxT
(weatherAtLocation$elementName=="MinT") ->
pick_MinT
weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT
weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT
glue::glue("{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。")
}
askSilly_weather("臺中市")#,today())
askSilly_weather <- function(locationInput,dateInput){
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
(weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location
weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation
(weatherAtLocation$elementName=="MaxT") ->
pick_MaxT
(weatherAtLocation$elementName=="MinT") ->
pick_MinT
weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT
weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT
glue::glue("{locationInput} 氣溫，最高{maxT}度，最低{minT}度。")
}
askSilly_weather("臺中市")#,today())
askSilly_weather("花蓮縣")#,today())
dateInput <- lubridate::today()
locationInput <- "新北市"
askSilly_weather <- function(locationInput,dateInput){
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
(weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location
weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation
(weatherAtLocation$elementName=="MaxT") ->
pick_MaxT
(weatherAtLocation$elementName=="MinT") ->
pick_MinT
weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT
weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT
glue::glue("{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。")
}
askSilly_weather("臺中市")#,today())
# 查詢函數formals arguments要求
formals(askSilly_weather)
# 查詢函數主體
body(askSilly_weather)
learning_topics <-
list(
subject="函數",
date=lubridate::ymd("2020-06-03"),
functionsCreated=list(
demand=demand_return # 等號右邊是呼叫demand_return的定義值，也就是function(...){...}值定義本身。
)
)
learning_topics$functionsCreated$demand(1.2)
View(learning_topics)
# 查詢函數執行所要求環境
environment(demand_return)
# 若函數執行需要Global environment已存在某些物件，查詢需要哪些物件
codetools::findGlobals(demand_return)
intercept <- 10
slope <- -5
myDemand <- function(p){
q_d <- intercept + slope*p
return(q_d)
}
environment(demand_return)
environment(myDemand)
codetools::findGlobals(demand_return)
codetools::findGlobals(myDemand)
# myDemand對Global environment的要求多了intercept及slope
# 移除global environment裡的intercept及slope
rm(intercept, slope)
demand_return(1.2) # 維持正常運作
myDemand(1.2) # 無法運作
intercept <- 10
slope <- -5
myDemand(1.2)
slope <- -1
myDemand(1.2)
intercept <- 5
slope <- -1.2
myDemand(1.2)
knitr::opts_chunk$set(echo = TRUE)
# 先執行此行輸入學號
readline(prompt = "請輸入你的學號") -> studentId
knitr::opts_chunk$set(echo = TRUE)
# 先執行此行輸入學號
readline(prompt = "請輸入你的學號") -> studentId
knitr::opts_chunk$set(echo = TRUE)
# 檢視步驟耗時elapse time
system.time(
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
)
if(!exists("weather_next36hours")){
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
SOAR::Store(weather_next36hours) # 存在.R_cache environment中
}
if(!exists("weather_next36hours")){
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
SOAR::Store(weather_next36hours) # 存在.R_cache environment中
}
SOAR::Store(weather_next36hours) # 存在.R_cache environment中
install.packages("SOAR")
if(!exists("weather_next36hours")){
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
SOAR::Store(weather_next36hours) # 存在.R_cache environment中
}
if(!exists("weather_next36hours")){
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
SOAR::Store(weather_next36hours) # 存在.R_cache environment中
}
SOAR::Store(weather_next36hours) # 存在.R_cache environment中
askSilly_weather <- function(locationInput,dateInput){
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
(weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location
weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation
(weatherAtLocation$elementName=="MaxT") ->
pick_MaxT
(weatherAtLocation$elementName=="MinT") ->
pick_MinT
weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT
weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT
glue::glue("{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。")
}
askSilly_weather2 <- function(locationInput,dateInput){
if(!exists("weather_next36hours")){
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
SOAR::Store(weather_next36hours) # 存在.R_cache environment中
}
(weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location
weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation
(weatherAtLocation$elementName=="MaxT") ->
pick_MaxT
(weatherAtLocation$elementName=="MinT") ->
pick_MinT
weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT
weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT
glue::glue("{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。")
}
library(lubridate)
system.time(
askSilly_weather("新北市",today())
)
system.time(
askSilly_weather("臺北市",today())
)
askSilly_weather("新北市",today())
askSilly_weather("臺北市",today())
SOAR::Remove(weather_next36hours)
system.time(
askSilly_weather2("新北市",today())
)
system.time(
askSilly_weather2("臺北市",today())
)
askSilly_weather2("新北市",today())
askSilly_weather2("臺北市",today())
n <- 54
if(as.logical(n %% 2)){
fvalue <- -(n+1)/2
} else {
fvalue <- n/2
}
print(n)
print(fvalue)
myFun <- function(n){
if(as.logical(n %% 2)){
fvalue <- -(n+1)/2
} else {
fvalue <- n/2
}
return(fvalue)
}
myFun(54)
myFun(33)
# 先執行此行輸入學號
readline(prompt = "請輸入你的學號") -> studentId
# 先執行此行輸入學號
readline(prompt = "請輸入你的學號") -> studentId
# 之後才執行以下程式
if(
str_detect(studentId,'^[43](1[01][0-9]|9[0-9])[0-9]{5}$',negate=T) # condition: 是否輸入學號正確？
) {
warning("你所輸入的學號不正確")
}
library(stringr)
if(
str_detect(studentId,'^[43](1[01][0-9]|9[0-9])[0-9]{5}$',negate=T) # condition: 是否輸入學號正確？
) {
warning("你所輸入的學號不正確")
}
library(stringr)
if(
str_detect(studentId,'^[43](1[01][0-9]|9[0-9])[0-9]{5}$',negate=T) # condition: 是否輸入學號正確？
) {
warning("你所輸入的學號不正確")
}
jsonlite::fromJSON("https://www.dropbox.com/s/d14j5hp3i5ps657/examSubmissionTimes.json?dl=1") -> examSubmissionTime
head(examSubmissionTime$section)
head(examSubmissionTime$time)
compute_howEarly <- function(student_i_section, student_i_time){
# student_i_section <- examSubmissionTime$section[[i]]
# student_i_time <- examSubmissionTime$time[[i]]
if(student_i_section=="56"){
deadline <- lubridate::ymd_hms("2020-05-27 15:00:00", tz="Asia/Taipei")
} else {
deadline <- lubridate::ymd_hms("2020-05-27 17:00:00", tz="Asia/Taipei")
}
howEarly <- deadline - lubridate::ymd_hms(student_i_time, tz="Asia/Taipei")
# print(howEarly)
return(howEarly)
}
compute_howEarly(examSubmissionTime$section[[1]],examSubmissionTime$time[[1]])
compute_howEarly(examSubmissionTime$section[[2]],examSubmissionTime$time[[2]])
compute_howEarly(examSubmissionTime$section[[3]],examSubmissionTime$time[[3]])
studentSequence <- 1:length(examSubmissionTime$section)
library(purrr)
map(studentSequence,
~compute_howEarly(
examSubmissionTime$section[[.x]],
examSubmissionTime$time[[.x]])
) -> list_howEarly
readline("請輸入你的成績（整數）： ") -> grade # 單獨執行
if(grade >=90){
print("優")
} else if(grade>=80 & grade<=89){
print("良")
} else if(grade>=70 & grade<=79){
print("尚可")
} else {
print("待加強")
}
grade <- 80
if(grade >=90){
print("優")
} else if(grade>=75 & grade<=89){
print("良")
} else if(grade>=70 & grade<=85){
print("尚可")
} else {
print("待加強")
}
grade <- 80
if(grade >=90){
print("優")
} else if(grade>=70 & grade<=85){
print("尚可")
} else if(grade>=75 & grade<=89){
print("良")
} else {
print("待加強")
}
