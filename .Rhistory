school <- factor(differentMajors)
levels(school) <- currentLevels
school
class(school)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$學年度 <- factor(studentHeights$學年度, ordered = TRUE)
studentHeights$年齡 <- factor(studentHeights$年齡, ordered = TRUE)
levels_year <- levels(studentHeights$學年度)
levels_year <- as.integer(levels_year)
levels_year <- sort(levels_year)
levels_age <- levels(studentHeights$年齡)
levels_age <- as.integer(levels_age)
levels_age <- sort(levels_age)
studentHeights
studentHeights$`年齡層` <- factor(studentHeights$`年齡層`, ordered = TRUE)
level_names <- levels(studentHeights$`年齡層`)
startingAges <- stringr::str_extract(level_names, "^[0-9]+")
startingAges <- as.integer(startingAges)
names(startingAges) <- level_names
sort(startingAges) -> startingAges
studentHeights$`年齡層` <-
factor(
studentHeights$`年齡層`, names(startingAges), ordered = TRUE
)
levels(studentHeights$`年齡層`)
studentHeights$`年齡層`
pick_sum <- studentHeights$類別 == "總計"
pick_68 <- studentHeights$年齡層 == "6-8"
picked_average_68 <- studentHeights$平均身高[pick_68 & pick_sum]
average_68 <- mean(picked_average_68)
pick_912 <- studentHeights$年齡層 == "9-12"
picked_average_912 <- studentHeights$平均身高[pick_912 & pick_sum]
average_912 <- mean(picked_average_912)
pick_1315 <- studentHeights$年齡層 == "13-15"
picked_average_1315 <- studentHeights$平均身高[pick_1315 & pick_sum]
average_1315 <- mean(picked_average_1315)
averageHeightByGroup <- c(average_68, average_912, average_1315)
level_names <- levels(studentHeights$`年齡層`)
names(averageHeightByGroup) <- level_names
averageHeightByGroup
pick_male <- studentHeights$類別 == "男"
pick_female <- studentHeights$類別 == "女"
pick_68 <- studentHeights$年齡層 == "6-8"
picked_68_male <- studentHeights$平均身高[pick_68 & pick_male]
picked_68_female <- studentHeights$平均身高[pick_68 & pick_female]
difference_68 <- picked_68_male - picked_68_female
average_difference_68 <- mean(difference_68)
pick_912 <- studentHeights$年齡層 == "9-12"
picked_912_male <- studentHeights$平均身高[pick_912 & pick_male]
picked_912_female <- studentHeights$平均身高[pick_912 & pick_female]
difference_912 <- picked_912_male - picked_912_female
average_difference_912 <- mean(difference_912)
pick_1315 <- studentHeights$年齡層 == "13-15"
picked_1315_male <- studentHeights$平均身高[pick_1315 & pick_male]
picked_1315_female <- studentHeights$平均身高[pick_1315 & pick_female]
difference_1315 <- picked_1315_male - picked_1315_female
average_difference_1315 <- mean(difference_1315)
heightDifferenceByGroup <- c(average_difference_68, average_difference_912, average_difference_1315)
level_names <- levels(studentHeights$`年齡層`)
names(heightDifferenceByGroup) <- level_names
heightDifferenceByGroup
knitr::opts_chunk$set(echo = TRUE)
library(purrr)
example <- list(
name=c("小明","小花","小新","美美"),
height=c(175,166,170,160),
weight=c(77,NA,60,43),
birthday=lubridate::ymd(c("1998-03-11","1999-12-22","1995-08-22","2001-10-10")),
hobby=c("美食 旅遊","旅遊 時尚","3C 美食","音樂 旅遊"),
residence=c("Taipei","New Taipei","Taichung","Kaohsiung"),
allowance=factor(c("0-1000","1001-2000","2000+","1001-2000")),
bloodType=c("A","B","B","O")
)
pick_小新 <- example$name == "小新"
data_selected <-
list(
name=example$name[pick_小新],
weight=example$weight[pick_小新],
height=example$height[pick_小新],
hobby=example$hobby[pick_小新],
residence=example$residence[pick_小新],
allowance=example$allowance[pick_小新],
bloodType=example$bloodType[pick_小新]
)
map(example, ~.x[pick_小新]) ->
data_selected
data_selected
jsonlite::fromJSON("https://www.dropbox.com/s/6252gbdnv9owljm/dance.json?dl=1", simplifyDataFrame = F) -> dance
# 第一個dance表演名稱
dance[[1]]$title
# 第二個dance表演名稱
dance[[2]]$title
View(dance)
map(dance, ~.x$title) ->
list_titles
View(list_titles)
# 記載第一個表演的所有場次訊息
dance[[1]]$showInfo
str(dance[[1]]$showInfo)
# 計算第一個表演有幾個場次
length(dance[[1]]$showInfo)
# 計算第二個表演有幾個場次
length(dance[[2]]$showInfo)
map(dance,~length(.x$showInfo)) ->
list_numberOfShows
View(list_numberOfShows)
str(dance[[4]]$showInfo)
# 這個表演第1個場次的訊息
dance[[4]]$showInfo[[1]]$time
# 這個表演第2個場次的訊息
dance[[4]]$showInfo[[2]]$time
map(dance[[4]]$showInfo, ~ .x$time) ->
list_showTimes_dance4
View(list_showTimes_dance4)
num <- c(2,5,7,1,3)
num[[1]]+3
num[[2]]+3
num[[4]]+3
map(num, ~ .x+3)
chr <- c("abaa","accd")
library(stringr)
str_extract_all(chr[[1]],"[ad]")
str_extract_all(chr[[2]],"[ad]")
map(chr, ~ str_extract_all(.x,"[ad]"))
knitr::opts_chunk$set(echo = TRUE)
threeHeigths <- c(Gary=178, John=182, Cam=175)
library(magrittr)
sort(threeHeigths, decreasing=T) %>%
names(.) %>%
.[[1]] -> highestPerson
highestPerson
f(w) -> x
# 由cities創出每個元素對應的北部、東部、中部region factor
cities <- factor(c("台北","花蓮","台東","台中"))
levels(cities)
region <- cities
# 以下為一連串的pipe operation
levels(region) -> currentLevels
str_replace(currentLevels,"台北","北部") -> currentLevels1
str_replace(currentLevels1,"花蓮|台東","東部") -> currentLevels2
str_replace(currentLevels2,"台中","中部") -> regionLevels
regionLevels -> levels(region)
levels(region) %>%
str_replace(.,"台北","北部") %>%
str_replace(.,"花蓮|台東","東部") %>%
str_replace(.,"台中","中部") ->
levels(region)
num <- c(2,97,22,15,7)
# 選出大於50的數字
(num > 50) -> pick_big
num[pick_big]
(num > 50) %>%
num[.]
# 資料
population <- c(`cityA`=500,`cityB`=1500, `cityC`=399)
cities <- c("cityA","cityA","cityB","cityB","cityC")
# 分析步驟
names(sort(population)) -> setLevels
factor(cities, levels = setLevels) -> cities
setLevels
jsonlite::fromJSON("https://quality.data.gov.tw/dq_download_json.php?nid=6020&md5_url=ceedea8b44b88a1bf46b48ab84b8742c", simplifyDataFrame = F) -> cpiByIncome
View(params)
View(cpiByIncome)
element1 <- cpiByIncome[[1]]
names_element1 <- names(element1)
names_element1
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr); library(purrr); library(magrittr)
# cpiByIncome[[1]]$item
# cpiByIncome[[2]]$item
map_items <- map(cpiByIncome, ~ .x$item)
unlist_items <- unlist(map_items)
items <- factor(unlist_items)
items
map_items
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr); library(purrr); library(magrittr)
# cpiByIncome[[1]]$item
# cpiByIncome[[2]]$item
map_items <- map(cpiByIncome, ~ .x$item)
unlist_items <- unlist(map_items)
items <- factor(unlist_items)
items
cpiByIncome[[1]]$item
cpiByIncome[[1]]$Item
# cpiByIncome[[1]]$Item
# cpiByIncome[[2]]$Item
map_items <- map(cpiByIncome, ~ .x$Item)
unlist_items <- unlist(map_items)
items <- factor(unlist_items)
items
currenLevels <- levels(items)
pick_type1 <- items == "全體家庭"
pick_type2 <- items == "最低20%所得家庭"
pick_type3 <- items == "中間60%所得家庭"
pick_type4 <- items == "最高20%所得家庭"
str_replace(currenLevels, items[pick_type1], "全體家庭") -> currenLevels1
str_replace(currenLevels1, items[pick_type2], "最低20%所得家庭") -> currenLevels2
str_replace(currenLevels2, items[pick_type3], "中間60%所得家庭") -> currenLevels3
str_replace(currenLevels3, items[pick_type4], "最高20%所得家庭") -> family_type
family_type
family_type <- items
currenLevels <- levels(family_type)
newLevels <- str_extract(currenLevels, "[:graph:]+(?=#)")
newLevels -> levels(family_type)
family_type <- factor(family_type, levels=c("全體家庭","最低20%所得家庭","中間60%所得家庭","最高20%所得家庭"))
family_type
subcategory <- items
currenLevels2 <- levels(subcategory)
newLevels2 <- str_extract(currenLevels2, "(?<=#)[:graph:]+(?=\\()")
newLevels -> levels(subcategory)
subcategory
subcategory <- items
currenLevels2 <- levels(subcategory)
newLevels2 <- str_extract(currenLevels2, "(?<=#)[:graph:]+(?=\\()")
newLevels2 -> levels(subcategory)
subcategory
levels(subcategory) -> currentLevels
str_extract(currentLevels, "([:graph:]+(?=\\.)|總指數)") -> chnNumberLevels
chnNumberLevels
# subcategory
chineseNumbers <- "一二三四五六七"
unlist(str_split(chineseNumbers,"")) -> chnVector
namedVector <- 1:8
names(namedVector) <- c(chnVector,"總指數")
namedVector
chnNumberLevels
namedVector[chnNumberLevels] -> namedVector2
names(namedVector2) <- currentLevels
subcategory <- factor(subcategory, levels=names(sort(namedVector2)))
subcategory
namedVector2
map(cpiByIncome, ~.x$TYPE=="原始值") -> check_step
unlist(check_step) -> pick_values
cpiByIncome[pick_values] -> cpiValues
cpiValues
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr); library(purrr); library(magrittr)
source("https://www.dropbox.com/s/aow5y2772r8ratb/regexPatternCheck.R?dl=1", encoding = "UTF-8")
jsonlite::fromJSON("https://www.dropbox.com/s/8wgdef4v44k1w0g/tpe_highSchools.json?dl=1") -> tpe_highSchools
tpe_highSchools <- factor(tpe_highSchools)
tpe_highSchools
tpe_highSchools = factor(tpe_highSchools, levels=c("臺北市立第一女中","台北市立第一女子高級中學","中山女中","中山女高", "台北市立中山女中", "臺北市立中山女子高級中學","國立政大附中", "國立政治大學附屬高級中學"))
tpe_highSchools
tpe_highSchools
levels(tpe_highSchools) <- c(levels(tpe_highSchools),"北一女")
factor2 <- factor(c("北一女","北一女","北一女","北一女","北一女","北一女","北一女","北一女","北一女","北一女"))
tpe_highSchools[680:689] <- factor2
tpe_highSchools
regex_hs1st <- "臺?台?北(市立)?第?一女(子高級中學)?"
regex_hs1st
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hs1st <- "臺?台?北(市立)?第?一女子?高?級?中?學?"
regex_hs1st
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hsTitle <- "(?=高?級?中?學?)"
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hsTitle <- "高?級?中?學?$"
regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
View(data228)
`全宗名編號` <-
data228[[1]]
`全宗名編號` <-
data228[[1]]
#`全宗名編號` <-
data228[[1]]
#`全宗名編號` <-
#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"(?!/)[:graph:](?=/)")
names(data228[[5]]) <- "全宗名編號"
data228[[5]]
# data228[c("全宗名編號","年")]
#`全宗名編號` <-
#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"(?!/)[:graph:]+(?=/)")
names(data228[[5]]) <- "全宗名編號"
data228[[5]]
# data228[c("全宗名編號","年")]
#`全宗名編號` <-
#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"(?<!/)[:graph:]+(?=/)")
names(data228[[5]]) <- "全宗名編號"
data228[[5]]
# data228[c("全宗名編號","年")]
#`全宗名編號` <-
#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"(?<!/)[:graph:]+(?=/)")
names(data228[[5]]) <- "全宗名編號"
data228[[5]]
# data228[c("全宗名編號","年")]
#`全宗名編號` <-
#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"(?<!\\/)[:graph:]+(?=\\/)")
names(data228[[5]]) <- "全宗名編號"
data228[[5]]
# data228[c("全宗名編號","年")]
#`全宗名編號` <-
#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]+(?=/)")
names(data228[[5]]) <- "全宗名編號"
data228[[5]]
# data228[c("全宗名編號","年")]
#`全宗名編號` <-
#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
names(data228[[5]]) <- "全宗名編號"
data228[[5]]
# data228[c("全宗名編號","年")]
View(data228)
#`全宗名編號` <-
#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
names(data228[[5]]) <- c("全宗名編號")
data228[[5]]
# data228[c("全宗名編號","年")]
View(data228)
View(data228)
View(data228)
class(data228[[5]])
#`全宗名編號` <-
#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
facor(data228[[5]],levels=data228[[5]])
#`全宗名編號` <-
#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
factor(data228[[5]],levels=data228[[5]])
names(data228[[5]]) <- c("全宗名編號")
data228[[5]]
# data228[c("全宗名編號","年")]
#`全宗名編號` <-
#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
factor(data228[[5]])
names(data228[[5]]) <- c("全宗名編號")
data228[[5]]
# data228[c("全宗名編號","年")]
View(data228)
#`全宗名編號` <-
#pick_1 <-
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
data228[[5]] <- factor(data228[[5]])
names(data228[[5]]) <- c("全宗名編號")
data228[[5]]
# data228[c("全宗名編號","年")]
View(data228)
levels(data228[[5]])
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]+(?=/)")
data228[[5]] <- factor(data228[[5]])
names(data228[[5]]) <- c("全宗名編號")
data228[[5]]
#data228[[6]] <- str_extract(data228[[1]],"^[:graph:]{11}")
# data228[c("全宗名編號","年")]
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11,12}")
data228[[5]] <- factor(data228[[5]])
names(data228[[5]]) <- c("全宗名編號")
data228[[5]]
#data228[[6]] <- str_extract(data228[[1]],"^[:graph:]{11}")
# data228[c("全宗名編號","年")]
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11,12}")
data228[[5]] <- factor(data228[[5]])
names(data228[[5]]) <- c("全宗名編號")
data228[[5]]
#data228[[6]] <- str_extract(data228[[1]],"^[:graph:]{11}")
levels(data228[[5]] )
# data228[c("全宗名編號","年")]
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11,12}")
data228[[5]] <- factor(data228[[5]])
names(data228[[5]]) <- c("全宗名編號")
data228[[5]]
#data228[[6]] <- str_extract(data228[[1]],"^[:graph:]{11}")
levels(data228[[5]])
# data228[c("全宗名編號","年")]
#data228[[6]] <- str_extract(data228[[1]],"^[:graph:]{11}")
levels(data228[[5]])
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
data228[[5]] <- factor(data228[[5]])
names(data228[[5]]) <- c("全宗名編號")
data228[[5]]
#data228[[6]] <- str_extract(data228[[1]],"^[:graph:]{11}")
# data228[c("全宗名編號","年")]
View(data228)
data228[[6]] <- str_extract(data228[[1]],"(?<=data228[[5]]/00)[:graph:]{2}")
data228[[6]] <- str_extract(data228[[1]],"(?<=data228[[5]]/00)[:graph:]{2}")
data228[[6]] <- factor(data228[[6]])
names(data228[[6]]) <- c("年")
data228[[6]]
data228[[6]] <- str_extract(data228[[1]],"(?<=[:graph:]{14})[:graph:]{2}")
data228[[6]] <- factor(data228[[6]])
names(data228[[6]]) <- c("年")
data228[[6]]
data228[c("全宗名編號","年")]
`全宗名編號` <- data228[[5]]
View(data228)
`全宗名編號` -> data228[[5]]
View(data228)
names(data228[5]) <- c("全宗名編號")
View(data228)
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
data228[[5]] <- factor(data228[[5]])
names(data228[5]) <- c("全宗名編號")
data228[[6]] <- str_extract(data228[[1]],"(?<=[:graph:]{14})[:graph:]{2}")
data228[[6]] <- as.numeric(data228[[6]])
names(data228[[6]]) <- c("年")
data228[c("全宗名編號","年")]
View(data228)
names(V5) <- c("全宗名編號")
names(data228[[5]]) <- `全宗名編號`
View(data228)
names(data228[[5]]) <- c("全宗名編號")
data228 <- c(`全宗名編號` = data228[[5]])
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
data228[[5]] <- factor(data228[[5]])
data228[[6]] <- str_extract(data228[[1]],"(?<=[:graph:]{14})[:graph:]{2}")
data228[[6]] <- as.numeric(data228[[6]])
names(data228[[6]]) <- c("年")
data228[c("全宗名編號","年")]
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
data228[[5]] <- c(`全宗名編號`=data228[[5]])
View(data228)
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
data228[[5]] <- factor(data228[[5]])
data228[[5]] <- c(`全宗名編號`=data228[[5]])
View(data228)
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
data228[[5]] <- factor(data228[[5]])
View(data228)
data228[[6]] <- str_extract(data228[[1]],"(?<=[:graph:]{14})[:graph:]{2}")
View(data228)
data228 <- list(c(`全宗名編號`=data228[[5]],`年`=data228[[6]]))
data228[c("全宗名編號","年")]
View(data228)
data228[[5]] <- list(`全宗名編號`=data228[[5]])
data228[[5]] <- (`全宗名編號`=data228[[5]])
data228[[5]] <- `全宗名編號`
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
data228[[5]] <- factor(data228[[5]])
names(data228[[5]]) <- c("全宗名編號")
data228[[6]] <- str_extract(data228[[1]],"(?<=[:graph:]{14})[:graph:]{2}")
data228[[6]] <- as.numeric(data228[[6]])
names(data228[[6]]) <- c("年")
data228[c("全宗名編號","年")]
data228[c("全宗名編號","年")]
View(data228)
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
c("全宗名編號") -> names(data228[[5]])
c(`全宗名編號`) -> names(data228[[5]])
View(data228)
data228[[5]]<- str_extract(data228[[1]],"^[:graph:]{11}")
data228[[5]] <- factor(data228[[5]])
c(`全宗名編號`) -> names(data228[[5]])
c("全宗名編號") -> names(data228[[5]])
View(data228)
jsonlite::fromJSON("https://www.dropbox.com/s/7myzzdnoor21hye/courseStructure2.json?dl=1") -> courseStructure
source("https://www.dropbox.com/s/pc8qg2phs3ypcr8/midterm108_2.R?dl=1", encoding="UTF-8")
View(courseStructure)
pick1 <- data228$附註=="表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
data1 <- data228$檔號[pick1]
victims <- data228$個人名稱[data1]
victims
pick1
data1 <- data228$檔號[pick1]
data1
pick2 <- data228$檔號 == data1
pick2 <- data228$檔號 == factor(data1)
data1 <- factor(data1)
pick2 <- data228$檔號 == data1
data1
pick1 <- data228$附註=="表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
data1 <- data228$檔號[pick1]
data1 <- factor(data1)
pick2 <- data228$檔號 == "A803000000A/0036/340.2/5502.3/19/007"
victims <- data228$個人名稱[pick2]
victims
pick1 <- data228$附註=="表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
data1 <- data228$檔號[pick1]
data1 <- factor(data1)
pick2 <- data228$檔號 == "A803000000A/0036/340.2/5502.3/19/007"
victims <- data228$個人名稱[pick2]
victims <- as.character(as.factor(victims))
victims
document1 <- data228$檔號[victims]
document1
pick3 <- data228$個人名稱 == victims
pick3 <- data228$個人名稱 %in% victims
document1 <- data228$檔號[pick3]
document1
table(document1)
jsonlite::fromJSON("https://www.dropbox.com/s/7myzzdnoor21hye/courseStructure2.json?dl=1") -> courseStructure
source("https://www.dropbox.com/s/pc8qg2phs3ypcr8/midterm108_2.R?dl=1", encoding="UTF-8")
View(courseStructure)
